// source: deqs.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var external_pb = require('./external_pb.js');
goog.object.extend(proto, external_pb);
goog.exportSymbol('proto.deqs.GetQuotesRequest', null, global);
goog.exportSymbol('proto.deqs.GetQuotesResponse', null, global);
goog.exportSymbol('proto.deqs.LiveUpdate', null, global);
goog.exportSymbol('proto.deqs.LiveUpdate.UpdateCase', null, global);
goog.exportSymbol('proto.deqs.LiveUpdatesRequest', null, global);
goog.exportSymbol('proto.deqs.Pair', null, global);
goog.exportSymbol('proto.deqs.PingRequest', null, global);
goog.exportSymbol('proto.deqs.PongResponse', null, global);
goog.exportSymbol('proto.deqs.Quote', null, global);
goog.exportSymbol('proto.deqs.QuoteId', null, global);
goog.exportSymbol('proto.deqs.QuoteStatusCode', null, global);
goog.exportSymbol('proto.deqs.SubmitQuotesRequest', null, global);
goog.exportSymbol('proto.deqs.SubmitQuotesResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deqs.SubmitQuotesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.deqs.SubmitQuotesRequest.repeatedFields_, null);
};
goog.inherits(proto.deqs.SubmitQuotesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deqs.SubmitQuotesRequest.displayName = 'proto.deqs.SubmitQuotesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deqs.SubmitQuotesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.deqs.SubmitQuotesResponse.repeatedFields_, null);
};
goog.inherits(proto.deqs.SubmitQuotesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deqs.SubmitQuotesResponse.displayName = 'proto.deqs.SubmitQuotesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deqs.GetQuotesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deqs.GetQuotesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deqs.GetQuotesRequest.displayName = 'proto.deqs.GetQuotesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deqs.GetQuotesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.deqs.GetQuotesResponse.repeatedFields_, null);
};
goog.inherits(proto.deqs.GetQuotesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deqs.GetQuotesResponse.displayName = 'proto.deqs.GetQuotesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deqs.LiveUpdatesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deqs.LiveUpdatesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deqs.LiveUpdatesRequest.displayName = 'proto.deqs.LiveUpdatesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deqs.LiveUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.deqs.LiveUpdate.oneofGroups_);
};
goog.inherits(proto.deqs.LiveUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deqs.LiveUpdate.displayName = 'proto.deqs.LiveUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deqs.QuoteId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deqs.QuoteId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deqs.QuoteId.displayName = 'proto.deqs.QuoteId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deqs.Pair = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deqs.Pair, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deqs.Pair.displayName = 'proto.deqs.Pair';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deqs.Quote = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deqs.Quote, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deqs.Quote.displayName = 'proto.deqs.Quote';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deqs.PingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deqs.PingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deqs.PingRequest.displayName = 'proto.deqs.PingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.deqs.PongResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.deqs.PongResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.deqs.PongResponse.displayName = 'proto.deqs.PongResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.deqs.SubmitQuotesRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deqs.SubmitQuotesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.deqs.SubmitQuotesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deqs.SubmitQuotesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.SubmitQuotesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    quotesList: jspb.Message.toObjectList(msg.getQuotesList(),
    external_pb.SignedContingentInput.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deqs.SubmitQuotesRequest}
 */
proto.deqs.SubmitQuotesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deqs.SubmitQuotesRequest;
  return proto.deqs.SubmitQuotesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deqs.SubmitQuotesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deqs.SubmitQuotesRequest}
 */
proto.deqs.SubmitQuotesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new external_pb.SignedContingentInput;
      reader.readMessage(value,external_pb.SignedContingentInput.deserializeBinaryFromReader);
      msg.addQuotes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deqs.SubmitQuotesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deqs.SubmitQuotesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deqs.SubmitQuotesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.SubmitQuotesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuotesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      external_pb.SignedContingentInput.serializeBinaryToWriter
    );
  }
};


/**
 * repeated external.SignedContingentInput quotes = 1;
 * @return {!Array<!proto.external.SignedContingentInput>}
 */
proto.deqs.SubmitQuotesRequest.prototype.getQuotesList = function() {
  return /** @type{!Array<!proto.external.SignedContingentInput>} */ (
    jspb.Message.getRepeatedWrapperField(this, external_pb.SignedContingentInput, 1));
};


/**
 * @param {!Array<!proto.external.SignedContingentInput>} value
 * @return {!proto.deqs.SubmitQuotesRequest} returns this
*/
proto.deqs.SubmitQuotesRequest.prototype.setQuotesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.external.SignedContingentInput=} opt_value
 * @param {number=} opt_index
 * @return {!proto.external.SignedContingentInput}
 */
proto.deqs.SubmitQuotesRequest.prototype.addQuotes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.external.SignedContingentInput, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.deqs.SubmitQuotesRequest} returns this
 */
proto.deqs.SubmitQuotesRequest.prototype.clearQuotesList = function() {
  return this.setQuotesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.deqs.SubmitQuotesResponse.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deqs.SubmitQuotesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.deqs.SubmitQuotesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deqs.SubmitQuotesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.SubmitQuotesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusCodesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    errorMessagesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    quotesList: jspb.Message.toObjectList(msg.getQuotesList(),
    proto.deqs.Quote.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deqs.SubmitQuotesResponse}
 */
proto.deqs.SubmitQuotesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deqs.SubmitQuotesResponse;
  return proto.deqs.SubmitQuotesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deqs.SubmitQuotesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deqs.SubmitQuotesResponse}
 */
proto.deqs.SubmitQuotesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<!proto.deqs.QuoteStatusCode>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStatusCodes(values[i]);
      }
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addErrorMessages(value);
      break;
    case 3:
      var value = new proto.deqs.Quote;
      reader.readMessage(value,proto.deqs.Quote.deserializeBinaryFromReader);
      msg.addQuotes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deqs.SubmitQuotesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deqs.SubmitQuotesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deqs.SubmitQuotesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.SubmitQuotesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusCodesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
  f = message.getErrorMessagesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getQuotesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.deqs.Quote.serializeBinaryToWriter
    );
  }
};


/**
 * repeated QuoteStatusCode status_codes = 1;
 * @return {!Array<!proto.deqs.QuoteStatusCode>}
 */
proto.deqs.SubmitQuotesResponse.prototype.getStatusCodesList = function() {
  return /** @type {!Array<!proto.deqs.QuoteStatusCode>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.deqs.QuoteStatusCode>} value
 * @return {!proto.deqs.SubmitQuotesResponse} returns this
 */
proto.deqs.SubmitQuotesResponse.prototype.setStatusCodesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.deqs.QuoteStatusCode} value
 * @param {number=} opt_index
 * @return {!proto.deqs.SubmitQuotesResponse} returns this
 */
proto.deqs.SubmitQuotesResponse.prototype.addStatusCodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.deqs.SubmitQuotesResponse} returns this
 */
proto.deqs.SubmitQuotesResponse.prototype.clearStatusCodesList = function() {
  return this.setStatusCodesList([]);
};


/**
 * repeated string error_messages = 2;
 * @return {!Array<string>}
 */
proto.deqs.SubmitQuotesResponse.prototype.getErrorMessagesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.deqs.SubmitQuotesResponse} returns this
 */
proto.deqs.SubmitQuotesResponse.prototype.setErrorMessagesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.deqs.SubmitQuotesResponse} returns this
 */
proto.deqs.SubmitQuotesResponse.prototype.addErrorMessages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.deqs.SubmitQuotesResponse} returns this
 */
proto.deqs.SubmitQuotesResponse.prototype.clearErrorMessagesList = function() {
  return this.setErrorMessagesList([]);
};


/**
 * repeated Quote quotes = 3;
 * @return {!Array<!proto.deqs.Quote>}
 */
proto.deqs.SubmitQuotesResponse.prototype.getQuotesList = function() {
  return /** @type{!Array<!proto.deqs.Quote>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.deqs.Quote, 3));
};


/**
 * @param {!Array<!proto.deqs.Quote>} value
 * @return {!proto.deqs.SubmitQuotesResponse} returns this
*/
proto.deqs.SubmitQuotesResponse.prototype.setQuotesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.deqs.Quote=} opt_value
 * @param {number=} opt_index
 * @return {!proto.deqs.Quote}
 */
proto.deqs.SubmitQuotesResponse.prototype.addQuotes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.deqs.Quote, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.deqs.SubmitQuotesResponse} returns this
 */
proto.deqs.SubmitQuotesResponse.prototype.clearQuotesList = function() {
  return this.setQuotesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deqs.GetQuotesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.deqs.GetQuotesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deqs.GetQuotesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.GetQuotesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pair: (f = msg.getPair()) && proto.deqs.Pair.toObject(includeInstance, f),
    baseRangeMin: jspb.Message.getFieldWithDefault(msg, 2, 0),
    baseRangeMax: jspb.Message.getFieldWithDefault(msg, 3, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deqs.GetQuotesRequest}
 */
proto.deqs.GetQuotesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deqs.GetQuotesRequest;
  return proto.deqs.GetQuotesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deqs.GetQuotesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deqs.GetQuotesRequest}
 */
proto.deqs.GetQuotesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.deqs.Pair;
      reader.readMessage(value,proto.deqs.Pair.deserializeBinaryFromReader);
      msg.setPair(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBaseRangeMin(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBaseRangeMax(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deqs.GetQuotesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deqs.GetQuotesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deqs.GetQuotesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.GetQuotesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPair();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.deqs.Pair.serializeBinaryToWriter
    );
  }
  f = message.getBaseRangeMin();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getBaseRangeMax();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional Pair pair = 1;
 * @return {?proto.deqs.Pair}
 */
proto.deqs.GetQuotesRequest.prototype.getPair = function() {
  return /** @type{?proto.deqs.Pair} */ (
    jspb.Message.getWrapperField(this, proto.deqs.Pair, 1));
};


/**
 * @param {?proto.deqs.Pair|undefined} value
 * @return {!proto.deqs.GetQuotesRequest} returns this
*/
proto.deqs.GetQuotesRequest.prototype.setPair = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deqs.GetQuotesRequest} returns this
 */
proto.deqs.GetQuotesRequest.prototype.clearPair = function() {
  return this.setPair(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deqs.GetQuotesRequest.prototype.hasPair = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 base_range_min = 2;
 * @return {number}
 */
proto.deqs.GetQuotesRequest.prototype.getBaseRangeMin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.deqs.GetQuotesRequest} returns this
 */
proto.deqs.GetQuotesRequest.prototype.setBaseRangeMin = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 base_range_max = 3;
 * @return {number}
 */
proto.deqs.GetQuotesRequest.prototype.getBaseRangeMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.deqs.GetQuotesRequest} returns this
 */
proto.deqs.GetQuotesRequest.prototype.setBaseRangeMax = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 limit = 4;
 * @return {number}
 */
proto.deqs.GetQuotesRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.deqs.GetQuotesRequest} returns this
 */
proto.deqs.GetQuotesRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.deqs.GetQuotesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deqs.GetQuotesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.deqs.GetQuotesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deqs.GetQuotesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.GetQuotesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    quotesList: jspb.Message.toObjectList(msg.getQuotesList(),
    proto.deqs.Quote.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deqs.GetQuotesResponse}
 */
proto.deqs.GetQuotesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deqs.GetQuotesResponse;
  return proto.deqs.GetQuotesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deqs.GetQuotesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deqs.GetQuotesResponse}
 */
proto.deqs.GetQuotesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.deqs.Quote;
      reader.readMessage(value,proto.deqs.Quote.deserializeBinaryFromReader);
      msg.addQuotes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deqs.GetQuotesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deqs.GetQuotesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deqs.GetQuotesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.GetQuotesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuotesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.deqs.Quote.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Quote quotes = 1;
 * @return {!Array<!proto.deqs.Quote>}
 */
proto.deqs.GetQuotesResponse.prototype.getQuotesList = function() {
  return /** @type{!Array<!proto.deqs.Quote>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.deqs.Quote, 1));
};


/**
 * @param {!Array<!proto.deqs.Quote>} value
 * @return {!proto.deqs.GetQuotesResponse} returns this
*/
proto.deqs.GetQuotesResponse.prototype.setQuotesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.deqs.Quote=} opt_value
 * @param {number=} opt_index
 * @return {!proto.deqs.Quote}
 */
proto.deqs.GetQuotesResponse.prototype.addQuotes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.deqs.Quote, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.deqs.GetQuotesResponse} returns this
 */
proto.deqs.GetQuotesResponse.prototype.clearQuotesList = function() {
  return this.setQuotesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deqs.LiveUpdatesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.deqs.LiveUpdatesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deqs.LiveUpdatesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.LiveUpdatesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pair: (f = msg.getPair()) && proto.deqs.Pair.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deqs.LiveUpdatesRequest}
 */
proto.deqs.LiveUpdatesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deqs.LiveUpdatesRequest;
  return proto.deqs.LiveUpdatesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deqs.LiveUpdatesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deqs.LiveUpdatesRequest}
 */
proto.deqs.LiveUpdatesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.deqs.Pair;
      reader.readMessage(value,proto.deqs.Pair.deserializeBinaryFromReader);
      msg.setPair(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deqs.LiveUpdatesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deqs.LiveUpdatesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deqs.LiveUpdatesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.LiveUpdatesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPair();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.deqs.Pair.serializeBinaryToWriter
    );
  }
};


/**
 * optional Pair pair = 1;
 * @return {?proto.deqs.Pair}
 */
proto.deqs.LiveUpdatesRequest.prototype.getPair = function() {
  return /** @type{?proto.deqs.Pair} */ (
    jspb.Message.getWrapperField(this, proto.deqs.Pair, 1));
};


/**
 * @param {?proto.deqs.Pair|undefined} value
 * @return {!proto.deqs.LiveUpdatesRequest} returns this
*/
proto.deqs.LiveUpdatesRequest.prototype.setPair = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deqs.LiveUpdatesRequest} returns this
 */
proto.deqs.LiveUpdatesRequest.prototype.clearPair = function() {
  return this.setPair(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deqs.LiveUpdatesRequest.prototype.hasPair = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.deqs.LiveUpdate.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.deqs.LiveUpdate.UpdateCase = {
  UPDATE_NOT_SET: 0,
  QUOTE_ADDED: 1,
  QUOTE_REMOVED: 2
};

/**
 * @return {proto.deqs.LiveUpdate.UpdateCase}
 */
proto.deqs.LiveUpdate.prototype.getUpdateCase = function() {
  return /** @type {proto.deqs.LiveUpdate.UpdateCase} */(jspb.Message.computeOneofCase(this, proto.deqs.LiveUpdate.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deqs.LiveUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.deqs.LiveUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deqs.LiveUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.LiveUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    quoteAdded: (f = msg.getQuoteAdded()) && proto.deqs.Quote.toObject(includeInstance, f),
    quoteRemoved: (f = msg.getQuoteRemoved()) && proto.deqs.QuoteId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deqs.LiveUpdate}
 */
proto.deqs.LiveUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deqs.LiveUpdate;
  return proto.deqs.LiveUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deqs.LiveUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deqs.LiveUpdate}
 */
proto.deqs.LiveUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.deqs.Quote;
      reader.readMessage(value,proto.deqs.Quote.deserializeBinaryFromReader);
      msg.setQuoteAdded(value);
      break;
    case 2:
      var value = new proto.deqs.QuoteId;
      reader.readMessage(value,proto.deqs.QuoteId.deserializeBinaryFromReader);
      msg.setQuoteRemoved(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deqs.LiveUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deqs.LiveUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deqs.LiveUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.LiveUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuoteAdded();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.deqs.Quote.serializeBinaryToWriter
    );
  }
  f = message.getQuoteRemoved();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.deqs.QuoteId.serializeBinaryToWriter
    );
  }
};


/**
 * optional Quote quote_added = 1;
 * @return {?proto.deqs.Quote}
 */
proto.deqs.LiveUpdate.prototype.getQuoteAdded = function() {
  return /** @type{?proto.deqs.Quote} */ (
    jspb.Message.getWrapperField(this, proto.deqs.Quote, 1));
};


/**
 * @param {?proto.deqs.Quote|undefined} value
 * @return {!proto.deqs.LiveUpdate} returns this
*/
proto.deqs.LiveUpdate.prototype.setQuoteAdded = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.deqs.LiveUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deqs.LiveUpdate} returns this
 */
proto.deqs.LiveUpdate.prototype.clearQuoteAdded = function() {
  return this.setQuoteAdded(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deqs.LiveUpdate.prototype.hasQuoteAdded = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional QuoteId quote_removed = 2;
 * @return {?proto.deqs.QuoteId}
 */
proto.deqs.LiveUpdate.prototype.getQuoteRemoved = function() {
  return /** @type{?proto.deqs.QuoteId} */ (
    jspb.Message.getWrapperField(this, proto.deqs.QuoteId, 2));
};


/**
 * @param {?proto.deqs.QuoteId|undefined} value
 * @return {!proto.deqs.LiveUpdate} returns this
*/
proto.deqs.LiveUpdate.prototype.setQuoteRemoved = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.deqs.LiveUpdate.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deqs.LiveUpdate} returns this
 */
proto.deqs.LiveUpdate.prototype.clearQuoteRemoved = function() {
  return this.setQuoteRemoved(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deqs.LiveUpdate.prototype.hasQuoteRemoved = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deqs.QuoteId.prototype.toObject = function(opt_includeInstance) {
  return proto.deqs.QuoteId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deqs.QuoteId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.QuoteId.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deqs.QuoteId}
 */
proto.deqs.QuoteId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deqs.QuoteId;
  return proto.deqs.QuoteId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deqs.QuoteId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deqs.QuoteId}
 */
proto.deqs.QuoteId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deqs.QuoteId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deqs.QuoteId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deqs.QuoteId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.QuoteId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.deqs.QuoteId.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.deqs.QuoteId.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.deqs.QuoteId.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.deqs.QuoteId} returns this
 */
proto.deqs.QuoteId.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deqs.Pair.prototype.toObject = function(opt_includeInstance) {
  return proto.deqs.Pair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deqs.Pair} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.Pair.toObject = function(includeInstance, msg) {
  var f, obj = {
    baseTokenId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    counterTokenId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deqs.Pair}
 */
proto.deqs.Pair.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deqs.Pair;
  return proto.deqs.Pair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deqs.Pair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deqs.Pair}
 */
proto.deqs.Pair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBaseTokenId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCounterTokenId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deqs.Pair.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deqs.Pair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deqs.Pair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.Pair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBaseTokenId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCounterTokenId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 base_token_id = 1;
 * @return {number}
 */
proto.deqs.Pair.prototype.getBaseTokenId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.deqs.Pair} returns this
 */
proto.deqs.Pair.prototype.setBaseTokenId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 counter_token_id = 2;
 * @return {number}
 */
proto.deqs.Pair.prototype.getCounterTokenId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.deqs.Pair} returns this
 */
proto.deqs.Pair.prototype.setCounterTokenId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deqs.Quote.prototype.toObject = function(opt_includeInstance) {
  return proto.deqs.Quote.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deqs.Quote} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.Quote.toObject = function(includeInstance, msg) {
  var f, obj = {
    sci: (f = msg.getSci()) && external_pb.SignedContingentInput.toObject(includeInstance, f),
    id: (f = msg.getId()) && proto.deqs.QuoteId.toObject(includeInstance, f),
    pair: (f = msg.getPair()) && proto.deqs.Pair.toObject(includeInstance, f),
    baseRangeMin: jspb.Message.getFieldWithDefault(msg, 4, 0),
    baseRangeMax: jspb.Message.getFieldWithDefault(msg, 5, 0),
    maxCounterTokens: jspb.Message.getFieldWithDefault(msg, 6, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deqs.Quote}
 */
proto.deqs.Quote.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deqs.Quote;
  return proto.deqs.Quote.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deqs.Quote} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deqs.Quote}
 */
proto.deqs.Quote.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new external_pb.SignedContingentInput;
      reader.readMessage(value,external_pb.SignedContingentInput.deserializeBinaryFromReader);
      msg.setSci(value);
      break;
    case 2:
      var value = new proto.deqs.QuoteId;
      reader.readMessage(value,proto.deqs.QuoteId.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = new proto.deqs.Pair;
      reader.readMessage(value,proto.deqs.Pair.deserializeBinaryFromReader);
      msg.setPair(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBaseRangeMin(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBaseRangeMax(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMaxCounterTokens(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deqs.Quote.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deqs.Quote.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deqs.Quote} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.Quote.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSci();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      external_pb.SignedContingentInput.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.deqs.QuoteId.serializeBinaryToWriter
    );
  }
  f = message.getPair();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.deqs.Pair.serializeBinaryToWriter
    );
  }
  f = message.getBaseRangeMin();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getBaseRangeMax();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getMaxCounterTokens();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
};


/**
 * optional external.SignedContingentInput sci = 1;
 * @return {?proto.external.SignedContingentInput}
 */
proto.deqs.Quote.prototype.getSci = function() {
  return /** @type{?proto.external.SignedContingentInput} */ (
    jspb.Message.getWrapperField(this, external_pb.SignedContingentInput, 1));
};


/**
 * @param {?proto.external.SignedContingentInput|undefined} value
 * @return {!proto.deqs.Quote} returns this
*/
proto.deqs.Quote.prototype.setSci = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deqs.Quote} returns this
 */
proto.deqs.Quote.prototype.clearSci = function() {
  return this.setSci(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deqs.Quote.prototype.hasSci = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional QuoteId id = 2;
 * @return {?proto.deqs.QuoteId}
 */
proto.deqs.Quote.prototype.getId = function() {
  return /** @type{?proto.deqs.QuoteId} */ (
    jspb.Message.getWrapperField(this, proto.deqs.QuoteId, 2));
};


/**
 * @param {?proto.deqs.QuoteId|undefined} value
 * @return {!proto.deqs.Quote} returns this
*/
proto.deqs.Quote.prototype.setId = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deqs.Quote} returns this
 */
proto.deqs.Quote.prototype.clearId = function() {
  return this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deqs.Quote.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Pair pair = 3;
 * @return {?proto.deqs.Pair}
 */
proto.deqs.Quote.prototype.getPair = function() {
  return /** @type{?proto.deqs.Pair} */ (
    jspb.Message.getWrapperField(this, proto.deqs.Pair, 3));
};


/**
 * @param {?proto.deqs.Pair|undefined} value
 * @return {!proto.deqs.Quote} returns this
*/
proto.deqs.Quote.prototype.setPair = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.deqs.Quote} returns this
 */
proto.deqs.Quote.prototype.clearPair = function() {
  return this.setPair(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.deqs.Quote.prototype.hasPair = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 base_range_min = 4;
 * @return {number}
 */
proto.deqs.Quote.prototype.getBaseRangeMin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.deqs.Quote} returns this
 */
proto.deqs.Quote.prototype.setBaseRangeMin = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 base_range_max = 5;
 * @return {number}
 */
proto.deqs.Quote.prototype.getBaseRangeMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.deqs.Quote} returns this
 */
proto.deqs.Quote.prototype.setBaseRangeMax = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 max_counter_tokens = 6;
 * @return {number}
 */
proto.deqs.Quote.prototype.getMaxCounterTokens = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.deqs.Quote} returns this
 */
proto.deqs.Quote.prototype.setMaxCounterTokens = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 timestamp = 7;
 * @return {number}
 */
proto.deqs.Quote.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.deqs.Quote} returns this
 */
proto.deqs.Quote.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deqs.PingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.deqs.PingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deqs.PingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.PingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ping: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deqs.PingRequest}
 */
proto.deqs.PingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deqs.PingRequest;
  return proto.deqs.PingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deqs.PingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deqs.PingRequest}
 */
proto.deqs.PingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPing(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deqs.PingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deqs.PingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deqs.PingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.PingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPing();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ping = 1;
 * @return {string}
 */
proto.deqs.PingRequest.prototype.getPing = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.deqs.PingRequest} returns this
 */
proto.deqs.PingRequest.prototype.setPing = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.deqs.PongResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.deqs.PongResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.deqs.PongResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.PongResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pong: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.deqs.PongResponse}
 */
proto.deqs.PongResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.deqs.PongResponse;
  return proto.deqs.PongResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.deqs.PongResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.deqs.PongResponse}
 */
proto.deqs.PongResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPong(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.deqs.PongResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.deqs.PongResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.deqs.PongResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.deqs.PongResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPong();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string pong = 1;
 * @return {string}
 */
proto.deqs.PongResponse.prototype.getPong = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.deqs.PongResponse} returns this
 */
proto.deqs.PongResponse.prototype.setPong = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.deqs.QuoteStatusCode = {
  CREATED: 0,
  INVALID_SCI: 1,
  UNSUPPORTED_SCI: 2,
  QUOTE_ALREADY_EXISTS: 3,
  QUOTE_IS_STALE: 4,
  OTHER: 5
};

goog.object.extend(exports, proto.deqs);
